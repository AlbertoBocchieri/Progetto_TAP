services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false                # Disabilita la sicurezza
      - xpack.security.http.ssl.enabled=false       # Disabilita SSL su HTTP  

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/var/lib/docker/volumes/alber_esdata/_data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      
    ports:
      - "5601:5601"

    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 200000000 # 200 MB
      KAFKA_MAX_REQUEST_SIZE: 200000000 # 200 MB
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 200000000  # 200 MB
    depends_on:
      - zookeeper
    
  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scraper
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200

networks:
  app-network:
    driver: bridge

volumes:
  esdata:
    driver: local
